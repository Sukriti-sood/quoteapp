{"ast":null,"code":"var _jsxFileName = \"/home/sukriti/Desktop/quote-app/src/components/App.js\";\nimport React, { useEffect, useState } from \"react\";\nimport Quote from \"./quote\";\n\nfunction App() {\n  const [datarray, setdataarray] = useState([]);\n  const [srandind, setranind] = useState(null);\n  useEffect(async () => {\n    const data = await fetch('https://gist.githubusercontent.com/natebass/b0a548425a73bdf8ea5c618149fe1fce/raw/f4231cd5961f026264bb6bb3a6c41671b044f1f4/quotes.json');\n    const quotes = await data.json();\n    setdataarray(quotes);\n    setranind(random(0, quotes.length - 1));\n  }, []);\n\n  function quoteselection() {\n    if (!datarray.length || !Number.isInteger(srandind)) {\n      return undefined;\n    }\n\n    return datarray[srandind];\n  }\n\n  function indexfunc() {\n    setranind(generatequoteindex());\n  }\n\n  function generatequoteindex() {\n    if (!datarray.length) {\n      return undefined;\n    }\n\n    return random(0, datarray.length - 1);\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"quote-box\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 1\n    }\n  }, /*#__PURE__*/React.createElement(Quote, {\n    selectedquote: quoteselection,\n    selectrandindex: indexfunc,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 5\n    }\n  }));\n}\n\nexport default App;","map":{"version":3,"sources":["/home/sukriti/Desktop/quote-app/src/components/App.js"],"names":["React","useEffect","useState","Quote","App","datarray","setdataarray","srandind","setranind","data","fetch","quotes","json","random","length","quoteselection","Number","isInteger","undefined","indexfunc","generatequoteindex"],"mappings":";AAAA,OAAOA,KAAP,IAAcC,SAAd,EAAwBC,QAAxB,QAAuC,OAAvC;AACA,OAAOC,KAAP,MAAkB,SAAlB;;AAOA,SAASC,GAAT,GAAc;AAEV,QAAM,CAACC,QAAD,EAAUC,YAAV,IAAwBJ,QAAQ,CAAC,EAAD,CAAtC;AACA,QAAM,CAACK,QAAD,EAAUC,SAAV,IAAqBN,QAAQ,CAAC,IAAD,CAAnC;AACAD,EAAAA,SAAS,CAAC,YAAY;AAClB,UAAMQ,IAAI,GAAG,MAAMC,KAAK,CAAC,uIAAD,CAAxB;AACA,UAAMC,MAAM,GAAG,MAAMF,IAAI,CAACG,IAAL,EAArB;AACAN,IAAAA,YAAY,CAACK,MAAD,CAAZ;AACAH,IAAAA,SAAS,CAACK,MAAM,CAAC,CAAD,EAAIF,MAAM,CAACG,MAAP,GAAgB,CAApB,CAAP,CAAT;AACD,GALM,EAKJ,EALI,CAAT;;AAOE,WAASC,cAAT,GAAyB;AACvB,QAAI,CAACV,QAAQ,CAACS,MAAV,IAAoB,CAACE,MAAM,CAACC,SAAP,CAAiBV,QAAjB,CAAzB,EAAqD;AACjD,aAAOW,SAAP;AACD;;AACD,WAAOb,QAAQ,CAACE,QAAD,CAAf;AACH;;AAED,WAASY,SAAT,GAAoB;AAChBX,IAAAA,SAAS,CAACY,kBAAkB,EAAnB,CAAT;AACH;;AAGD,WAASA,kBAAT,GACA;AACE,QAAI,CAACf,QAAQ,CAACS,MAAd,EAAsB;AAClB,aAAOI,SAAP;AACD;;AACD,WAAOL,MAAM,CAAC,CAAD,EAAGR,QAAQ,CAACS,MAAT,GAAgB,CAAnB,CAAb;AACH;;AAGP,sBACA;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,KAAD;AAAO,IAAA,aAAa,EAAGC,cAAvB;AACA,IAAA,eAAe,EAAEI,SADjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CADA;AAMC;;AACD,eAAef,GAAf","sourcesContent":["import React,{useEffect,useState} from \"react\";\nimport Quote from \"./quote\";\n\n\n\n\n\n\nfunction App(){\n\n    const [datarray,setdataarray]=useState([]);\n    const [srandind,setranind]=useState(null);\n    useEffect(async () => {\n        const data = await fetch('https://gist.githubusercontent.com/natebass/b0a548425a73bdf8ea5c618149fe1fce/raw/f4231cd5961f026264bb6bb3a6c41671b044f1f4/quotes.json');\n        const quotes = await data.json();\n        setdataarray(quotes);\n        setranind(random(0, quotes.length - 1));\n      }, []);\n\n      function quoteselection(){\n        if (!datarray.length || !Number.isInteger(srandind)) {\n            return undefined;\n          }\n          return datarray[srandind];\n      }\n\n      function indexfunc(){\n          setranind(generatequoteindex());\n      }\n\n\n      function generatequoteindex()\n      {\n        if (!datarray.length) {\n            return undefined;\n          }\n          return random(0,datarray.length-1);\n      }\n\n      \nreturn(\n<div className=\"quote-box\">\n    <Quote selectedquote= {quoteselection}\n    selectrandindex={indexfunc}/>\n</div>\n);\n}\nexport default App;\n"]},"metadata":{},"sourceType":"module"}