{"ast":null,"code":"var _jsxFileName = \"/home/sukriti/Desktop/quote-app/src/components/App.js\";\nimport React, { useEffect, useState } from \"react\";\nimport Quote from \"./quotemain\";\nimport Axios from \"axios\";\n\nfunction App() {\n  const [datarray, setdataarray] = useState([]);\n  const [srandind, setranind] = useState(null);\n  useEffect(() => {\n    function getfetchurl() {\n      return \"https://gist.githubusercontent.com/natebass/b0a548425a73bdf8ea5c618149fe1fce/raw/f4231cd5961f026264bb6bb3a6c41671b044f1f4/quotes.json\";\n    }\n\n    async function fetchdata() {\n      ;\n      const result = await Axios(getfetchurl());\n      console.log(result.data); // const quotes=\n      // console.log(quotes);\n      // setdataarray(quotes);\n      // setranind((Math.floor(Math.random()))*quotes.length-1);\n    }\n\n    fetchdata();\n  }, []);\n\n  function quoteselection() {\n    if (!datarray.length || !Number.isInteger(srandind)) {\n      return undefined;\n    }\n\n    return datarray[srandind];\n  }\n\n  function indexfunc() {\n    setranind(generatequoteindex());\n  }\n\n  function generatequoteindex() {\n    if (!datarray.length) {\n      return undefined;\n    }\n\n    return Math.floor(Math.random()) * datarray.length - 1;\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"quote-box\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 1\n    }\n  }, /*#__PURE__*/React.createElement(Quote, {\n    selectedquote: quoteselection,\n    selectrandindex: indexfunc,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 5\n    }\n  }));\n}\n\nexport default App;","map":{"version":3,"sources":["/home/sukriti/Desktop/quote-app/src/components/App.js"],"names":["React","useEffect","useState","Quote","Axios","App","datarray","setdataarray","srandind","setranind","getfetchurl","fetchdata","result","console","log","data","quoteselection","length","Number","isInteger","undefined","indexfunc","generatequoteindex","Math","floor","random"],"mappings":";AAAA,OAAOA,KAAP,IAAcC,SAAd,EAAwBC,QAAxB,QAAuC,OAAvC;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,SAASC,GAAT,GAAc;AAEV,QAAM,CAACC,QAAD,EAAUC,YAAV,IAAwBL,QAAQ,CAAC,EAAD,CAAtC;AACA,QAAM,CAACM,QAAD,EAAUC,SAAV,IAAqBP,QAAQ,CAAC,IAAD,CAAnC;AAEAD,EAAAA,SAAS,CAAC,MAAI;AACd,aAASS,WAAT,GAAsB;AAClB,aAAO,uIAAP;AACH;;AAED,mBAAeC,SAAf,GAA0B;AAAC;AACvB,YAAMC,MAAM,GAAE,MAAMR,KAAK,CAACM,WAAW,EAAZ,CAAzB;AACAG,MAAAA,OAAO,CAACC,GAAR,CAAYF,MAAM,CAACG,IAAnB,EAFsB,CAGtB;AACA;AACA;AACA;AACH;;AACDJ,IAAAA,SAAS;AACR,GAdQ,EAcP,EAdO,CAAT;;AAiBE,WAASK,cAAT,GAAyB;AACvB,QAAI,CAACV,QAAQ,CAACW,MAAV,IAAoB,CAACC,MAAM,CAACC,SAAP,CAAiBX,QAAjB,CAAzB,EAAqD;AACjD,aAAOY,SAAP;AACD;;AACD,WAAOd,QAAQ,CAACE,QAAD,CAAf;AACH;;AAED,WAASa,SAAT,GAAoB;AAChBZ,IAAAA,SAAS,CAACa,kBAAkB,EAAnB,CAAT;AACH;;AAGD,WAASA,kBAAT,GACA;AACE,QAAI,CAAChB,QAAQ,CAACW,MAAd,EAAsB;AAClB,aAAOG,SAAP;AACD;;AACD,WAAQG,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,EAAX,CAAD,GAA4BnB,QAAQ,CAACW,MAArC,GAA4C,CAAnD;AACH;;AAGP,sBACA;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,KAAD;AAAO,IAAA,aAAa,EAAGD,cAAvB;AACA,IAAA,eAAe,EAAEK,SADjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CADA;AAMC;;AACD,eAAehB,GAAf","sourcesContent":["import React,{useEffect,useState} from \"react\";\nimport Quote from \"./quotemain\";\nimport Axios from \"axios\";\n\nfunction App(){\n\n    const [datarray,setdataarray]=useState([]);\n    const [srandind,setranind]=useState(null);\n\n    useEffect(()=>{\n    function getfetchurl(){\n        return \"https://gist.githubusercontent.com/natebass/b0a548425a73bdf8ea5c618149fe1fce/raw/f4231cd5961f026264bb6bb3a6c41671b044f1f4/quotes.json\";\n    }\n        \n    async function fetchdata(){;\n        const result =await Axios(getfetchurl());\n        console.log(result.data);\n        // const quotes=\n        // console.log(quotes);\n        // setdataarray(quotes);\n        // setranind((Math.floor(Math.random()))*quotes.length-1);\n    }\n    fetchdata();\n    },[]);\n   \n\n      function quoteselection(){\n        if (!datarray.length || !Number.isInteger(srandind)) {\n            return undefined;\n          }\n          return datarray[srandind];\n      }\n\n      function indexfunc(){\n          setranind(generatequoteindex());\n      }\n\n\n      function generatequoteindex()\n      {\n        if (!datarray.length) {\n            return undefined;\n          }\n          return (Math.floor(Math.random()))*datarray.length-1;\n      }\n\n\nreturn(\n<div className=\"quote-box\">\n    <Quote selectedquote= {quoteselection}\n    selectrandindex={indexfunc}/>\n</div>\n);\n}\nexport default App;\n"]},"metadata":{},"sourceType":"module"}